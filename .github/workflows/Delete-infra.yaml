name: Delete Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        options:
          - dev

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-1

jobs:
  terraform-destroy-infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: github-run-id-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Capture VPC Outputs
        working-directory: ./vpc
        id: vpc_outputs
        run: |
          terraform init
          terraform workspace select -or-create ${{ github.event.inputs.environment }}
          terraform output -raw vpc_id > vpc_id.txt
          echo "VPC_ID=$(cat vpc_id.txt)" >> $GITHUB_ENV

      - name: Destroy EKS
        working-directory: ./eks
        env:
          TF_VAR_vpc_id: ${{ env.VPC_ID }}
        run: |
          terraform init
          terraform workspace select -or-create ${{ github.event.inputs.environment }}
          terraform validate
          terraform destroy -var-file=${{ github.event.inputs.environment }}.tfvars --auto-approve

      - name: Destroy VPC
        working-directory: ./vpc
        run: |
          terraform init
          terraform workspace select -or-create ${{ github.event.inputs.environment }}
          terraform validate
          terraform destroy -var-file=${{ github.event.inputs.environment }}.tfvars --auto-approve
