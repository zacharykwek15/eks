apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.50.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/     #Config Files (know what to scrape & how to run)
            - name: prometheus-storage
              mountPath: /prometheus  # Where Prometheus stores metrics
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
            
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-server-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
  namespace: monitoring
spec:
  type: LoadBalancer   # Exposed externally
  selector:
    app: prometheus-server
  ports:
    - port: 9090
      targetPort: 9090

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.1.3
          ports:
            - containerPort: 3000
          env:    #Added this for username and pw
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"                # set your username
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "YourSecurePassword"   # set your password

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: LoadBalancer   # Exposed externally
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000


